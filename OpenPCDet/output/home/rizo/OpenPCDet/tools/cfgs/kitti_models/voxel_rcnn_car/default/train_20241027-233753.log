2024-10-27 23:37:53,105   INFO  **********************Start logging**********************
2024-10-27 23:37:53,105   INFO  CUDA_VISIBLE_DEVICES=ALL
2024-10-27 23:37:53,105   INFO  Training with a single process
2024-10-27 23:37:53,105   INFO  cfg_file         /home/rizo/OpenPCDet/tools/cfgs/kitti_models/voxel_rcnn_car.yaml
2024-10-27 23:37:53,105   INFO  batch_size       2
2024-10-27 23:37:53,105   INFO  epochs           80
2024-10-27 23:37:53,105   INFO  workers          4
2024-10-27 23:37:53,105   INFO  extra_tag        default
2024-10-27 23:37:53,106   INFO  ckpt             None
2024-10-27 23:37:53,106   INFO  pretrained_model None
2024-10-27 23:37:53,106   INFO  launcher         none
2024-10-27 23:37:53,106   INFO  tcp_port         18888
2024-10-27 23:37:53,106   INFO  sync_bn          False
2024-10-27 23:37:53,106   INFO  fix_random_seed  False
2024-10-27 23:37:53,106   INFO  ckpt_save_interval 1
2024-10-27 23:37:53,106   INFO  local_rank       None
2024-10-27 23:37:53,106   INFO  max_ckpt_save_num 30
2024-10-27 23:37:53,106   INFO  merge_all_iters_to_one_epoch False
2024-10-27 23:37:53,106   INFO  set_cfgs         None
2024-10-27 23:37:53,106   INFO  max_waiting_mins 0
2024-10-27 23:37:53,106   INFO  start_epoch      0
2024-10-27 23:37:53,106   INFO  num_epochs_to_eval 0
2024-10-27 23:37:53,106   INFO  save_to_file     False
2024-10-27 23:37:53,106   INFO  use_tqdm_to_record False
2024-10-27 23:37:53,106   INFO  logger_iter_interval 50
2024-10-27 23:37:53,106   INFO  ckpt_save_time_interval 300
2024-10-27 23:37:53,106   INFO  wo_gpu_stat      False
2024-10-27 23:37:53,106   INFO  use_amp          False
2024-10-27 23:37:53,106   INFO  cfg.ROOT_DIR: /home/rizo/OpenPCDet
2024-10-27 23:37:53,106   INFO  cfg.LOCAL_RANK: 0
2024-10-27 23:37:53,106   INFO  cfg.CLASS_NAMES: ['Car']
2024-10-27 23:37:53,106   INFO  ----------- DATA_CONFIG -----------
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
2024-10-27 23:37:53,106   INFO  ----------- DATA_SPLIT -----------
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2024-10-27 23:37:53,106   INFO  ----------- INFO_PATH -----------
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2024-10-27 23:37:53,106   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2024-10-27 23:37:53,107   INFO  ----------- DATA_AUGMENTOR -----------
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2024-10-27 23:37:53,107   INFO  ----------- POINT_FEATURE_ENCODING -----------
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.05, 0.05, 0.1], 'MAX_POINTS_PER_VOXEL': 5, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2024-10-27 23:37:53,107   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2024-10-27 23:37:53,107   INFO  ----------- MODEL -----------
2024-10-27 23:37:53,107   INFO  cfg.MODEL.NAME: VoxelRCNN
2024-10-27 23:37:53,107   INFO  ----------- VFE -----------
2024-10-27 23:37:53,107   INFO  cfg.MODEL.VFE.NAME: MeanVFE
2024-10-27 23:37:53,107   INFO  ----------- BACKBONE_3D -----------
2024-10-27 23:37:53,107   INFO  cfg.MODEL.BACKBONE_3D.NAME: VoxelBackBone8x
2024-10-27 23:37:53,107   INFO  ----------- MAP_TO_BEV -----------
2024-10-27 23:37:53,107   INFO  cfg.MODEL.MAP_TO_BEV.NAME: HeightCompression
2024-10-27 23:37:53,107   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 256
2024-10-27 23:37:53,107   INFO  ----------- BACKBONE_2D -----------
2024-10-27 23:37:53,107   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2024-10-27 23:37:53,107   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [5, 5]
2024-10-27 23:37:53,107   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [1, 2]
2024-10-27 23:37:53,107   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128]
2024-10-27 23:37:53,107   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2]
2024-10-27 23:37:53,107   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128]
2024-10-27 23:37:53,107   INFO  ----------- DENSE_HEAD -----------
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}]
2024-10-27 23:37:53,107   INFO  ----------- TARGET_ASSIGNER_CONFIG -----------
2024-10-27 23:37:53,107   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2024-10-27 23:37:53,108   INFO  ----------- LOSS_CONFIG -----------
2024-10-27 23:37:53,108   INFO  ----------- LOSS_WEIGHTS -----------
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2024-10-27 23:37:53,108   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2024-10-27 23:37:53,108   INFO  ----------- ROI_HEAD -----------
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NAME: VoxelRCNNHead
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.SHARED_FC: [256, 256]
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.CLS_FC: [256, 256]
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.REG_FC: [256, 256]
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.3
2024-10-27 23:37:53,108   INFO  ----------- NMS_CONFIG -----------
2024-10-27 23:37:53,108   INFO  ----------- TRAIN -----------
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2024-10-27 23:37:53,108   INFO  ----------- TEST -----------
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.USE_FAST_NMS: False
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.SCORE_THRESH: 0.0
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 2048
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.7
2024-10-27 23:37:53,108   INFO  ----------- ROI_GRID_POOL -----------
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.FEATURES_SOURCE: ['x_conv2', 'x_conv3', 'x_conv4']
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.PRE_MLP: True
2024-10-27 23:37:53,108   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GRID_SIZE: 6
2024-10-27 23:37:53,109   INFO  ----------- POOL_LAYERS -----------
2024-10-27 23:37:53,109   INFO  ----------- x_conv2 -----------
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.MLPS: [[32, 32]]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.QUERY_RANGES: [[4, 4, 4]]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.POOL_RADIUS: [0.4]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.NSAMPLE: [16]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.POOL_METHOD: max_pool
2024-10-27 23:37:53,109   INFO  ----------- x_conv3 -----------
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.MLPS: [[32, 32]]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.QUERY_RANGES: [[4, 4, 4]]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.POOL_RADIUS: [0.8]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.NSAMPLE: [16]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.POOL_METHOD: max_pool
2024-10-27 23:37:53,109   INFO  ----------- x_conv4 -----------
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.MLPS: [[32, 32]]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.QUERY_RANGES: [[4, 4, 4]]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.POOL_RADIUS: [1.6]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.NSAMPLE: [16]
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.POOL_METHOD: max_pool
2024-10-27 23:37:53,109   INFO  ----------- TARGET_CONFIG -----------
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: roi_iou
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.75
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.25
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2024-10-27 23:37:53,109   INFO  ----------- LOSS_CONFIG -----------
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CLS_LOSS: BinaryCrossEntropy
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.REG_LOSS: smooth-l1
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2024-10-27 23:37:53,109   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.GRID_3D_IOU_LOSS: False
2024-10-27 23:37:53,109   INFO  ----------- LOSS_WEIGHTS -----------
2024-10-27 23:37:53,110   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_cls_weight: 1.0
2024-10-27 23:37:53,110   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_reg_weight: 1.0
2024-10-27 23:37:53,110   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_corner_weight: 1.0
2024-10-27 23:37:53,110   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_iou3d_weight: 1.0
2024-10-27 23:37:53,110   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2024-10-27 23:37:53,110   INFO  ----------- POST_PROCESSING -----------
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.3
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2024-10-27 23:37:53,110   INFO  ----------- NMS_CONFIG -----------
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.1
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2024-10-27 23:37:53,110   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2024-10-27 23:37:53,110   INFO  ----------- OPTIMIZATION -----------
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 2
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.LR: 0.01
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2024-10-27 23:37:53,110   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2024-10-27 23:37:53,110   INFO  cfg.TAG: voxel_rcnn_car
2024-10-27 23:37:53,110   INFO  cfg.EXP_GROUP_PATH: home/rizo/OpenPCDet/tools/cfgs/kitti_models
2024-10-27 23:37:53,117   INFO  ----------- Create dataloader & network & optimizer -----------
2024-10-27 23:37:53,179   INFO  Database filter by min points Car: 14357 => 13509
2024-10-27 23:37:53,194   INFO  Database filter by difficulty Car: 13509 => 10520
2024-10-27 23:37:53,199   INFO  Loading KITTI dataset
2024-10-27 23:37:53,286   INFO  Total samples for KITTI dataset: 3712
2024-10-27 23:37:53,499   INFO  ----------- Model VoxelRCNN created, param count: 7586620 -----------
2024-10-27 23:37:53,500   INFO  VoxelRCNN(
  (vfe): MeanVFE()
  (backbone_3d): VoxelBackBone8x(
    (conv_input): SparseSequential(
      (0): SubMConv3d(4, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (conv1): SparseSequential(
      (0): SparseSequential(
        (0): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv2): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d(16, 32, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv3): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d(32, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv4): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d(64, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[0, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv_out): SparseSequential(
      (0): SparseConv3d(64, 128, kernel_size=[3, 1, 1], stride=[2, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (map_to_bev_module): HeightCompression()
  (pfe): None
  (backbone_2d): BaseBEVBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): ZeroPad2d((1, 1, 1, 1))
        (1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
      (1): Sequential(
        (0): ZeroPad2d((1, 1, 1, 1))
        (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
  )
  (dense_head): AnchorHeadSingle(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (dir_loss_func): WeightedCrossEntropyLoss()
    (conv_cls): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    (conv_box): Conv2d(256, 14, kernel_size=(1, 1), stride=(1, 1))
    (conv_dir_cls): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
  )
  (point_head): None
  (roi_head): VoxelRCNNHead(
    (proposal_target_layer): ProposalTargetLayer()
    (reg_loss_func): WeightedSmoothL1Loss()
    (roi_grid_pool_layers): ModuleList(
      (0): NeighborVoxelSAModuleMSG(
        (groupers): ModuleList(
          (0): VoxelQueryAndGrouping()
        )
        (mlps_in): ModuleList(
          (0): Sequential(
            (0): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_pos): ModuleList(
          (0): Sequential(
            (0): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_out): ModuleList(
          (0): Sequential(
            (0): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (relu): ReLU()
      )
      (1-2): 2 x NeighborVoxelSAModuleMSG(
        (groupers): ModuleList(
          (0): VoxelQueryAndGrouping()
        )
        (mlps_in): ModuleList(
          (0): Sequential(
            (0): Conv1d(64, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_pos): ModuleList(
          (0): Sequential(
            (0): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_out): ModuleList(
          (0): Sequential(
            (0): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (relu): ReLU()
      )
    )
    (shared_fc_layer): Sequential(
      (0): Linear(in_features=20736, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Dropout(p=0.3, inplace=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
    )
    (cls_fc_layers): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
    )
    (cls_pred_layer): Linear(in_features=256, out_features=1, bias=True)
    (reg_fc_layers): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
    )
    (reg_pred_layer): Linear(in_features=256, out_features=7, bias=True)
  )
)
2024-10-27 23:37:53,502   INFO  **********************Start training home/rizo/OpenPCDet/tools/cfgs/kitti_models/voxel_rcnn_car(default)**********************
